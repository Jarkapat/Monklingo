from allauth.account.adapter import DefaultAccountAdapter
from allauth.socialaccount.adapter import DefaultSocialAccountAdapter
from allauth.socialaccount.models import SocialApp
from django.shortcuts import redirect
from django.core.exceptions import ObjectDoesNotExist
from django.contrib.auth import login
from django.utils.text import slugify
import random

class MyAccountAdapter(DefaultAccountAdapter):
    """
    Custom Account Adapter ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
    """
    def get_login_redirect_url(self, request):
        """
        ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á /routes/
        """
        return "/routes/"

    def respond_email_verification_sent(self, request, user):
        """
        ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏´‡πá‡∏ô‡∏´‡∏ô‡πâ‡∏≤ '‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß' ‡∏Å‡πá Redirect ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
        """
        return redirect("/routes/")


class MySocialAccountAdapter(DefaultSocialAccountAdapter):
    def get_app(self, request, provider, **kwargs):
        """
        ‡∏î‡∏∂‡∏á SocialApp ‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        """
        app = SocialApp.objects.filter(provider=provider).first()
        if not app:
            raise ObjectDoesNotExist(f"‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ SocialApp ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö {provider}. ‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô Django Admin")
        return app

    def get_login_redirect_url(self, request):
        """
        ‡∏Ç‡πâ‡∏≤‡∏°‡∏´‡∏ô‡πâ‡∏≤ Continue Page ‡πÅ‡∏•‡∏∞ Redirect ‡πÑ‡∏õ‡∏¢‡∏±‡∏á /routes/
        """
        return "/routes/"


    def pre_social_login(self, request, sociallogin):
        """
        ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏°‡∏µ username ‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÉ‡∏´‡πâ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
        """
        user = sociallogin.user

        # ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ username ‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
        if not user.username:
            base_username = slugify(user.email.split("@")[0])  # ‡πÉ‡∏ä‡πâ email prefix ‡πÄ‡∏õ‡πá‡∏ô username
            user.username = base_username

            # ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ã‡πâ‡∏≥‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            from django.contrib.auth import get_user_model
            User = get_user_model()
            counter = 1
            while User.objects.filter(username=user.username).exists():
                user.username = f"{base_username}{counter}"
                counter += 1

        # ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏°‡∏µ Primary Key ‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
        if not user.pk:
            user.save()  # üîπ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å user ‡∏•‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô

        user.backend = 'allauth.account.auth_backends.AuthenticationBackend'  # ‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î Backend
        login(request, user, backend=user.backend)  # ‚úÖ ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô 

    def get_connect_redirect_url(self, request, socialaccount):
        """
        ‚úÖ ‡∏Ç‡πâ‡∏≤‡∏° Continue Page ‡πÅ‡∏•‡∏∞ Redirect ‡πÑ‡∏õ‡∏¢‡∏±‡∏á /routes/ ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
        """
        return "/routes/"

   